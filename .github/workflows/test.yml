  
name: Test

on:
  push:
    branches:
        - master
  pull_request:
    types: [opened, synchronize]

jobs:

  quality:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6

    - name: Set up the cache
      uses: actions/cache@v1
      with:
        path: .venv
        key: cache-python-packages

    - name: Set up the project
      run: |
        pip install poetry safety
        poetry config virtualenvs.in-project true
        make setup
        
    - name: Check if the documentation builds correctly
      run: make check-docs

    - name: Check the code quality
      run: make check-code-quality

    - name: Check if the code is correctly typed
      run: make check-types

    - name: Check for vulnerabilities in dependencies
      run: make check-dependencies

  test:
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        poetry-version: [1.0.10]
        os: [ubuntu-18.04, macos-latest, windows-latest]
      fail-fast: false
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
            poetry-version: ${{ matrix.poetry-version }}
    
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest --cov starlette_session --cov-report=xml tests/    
    
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
            token: ${{ secrets.CODECOV_TOKEN }}
            file: ./coverage.xml
            flags: unittests
            fail_ci_if_error: true
